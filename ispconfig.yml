---
- hosts: all
  become: yes
  tasks:
    # Paso 1: Actualizar repositorios y paquetes del sistema
    - name: Actualizar repositorios y paquetes del sistema
      apt:
        update_cache: yes
        upgrade: dist

    # Paso 2: Configurar locales a es_ES.UTF-8
    - name: Configurar locales a es_ES.UTF-8
      locale_gen:
        name: es_ES.UTF-8
        state: present

    # Paso 3: Configurar la zona horaria a Europe/Madrid
    - name: Configurar la zona horaria a Europe/Madrid
      command: timedatectl set-timezone Europe/Madrid

    # Paso 4: Instalar NTP para sincronización de hora
    - name: Instalar NTP para sincronización de hora
      apt:
        name: ntp
        state: present

    # Paso 5: Instalar repositorios de Postgres y Postgres 12 sin interacción
    - name: Instalar repositorios de Postgres y Postgres 12
      shell: |
        sudo apt install -y postgresql-common
        yes "" | sudo /usr/share/postgresql-common/pgdg/apt.postgresql.org.sh  # Evitar la pausa interactiva
        sudo apt install -y postgresql-12

    # Paso 6: Asignar nombre de dominio en /etc/hosts
    - name: Asignar nombre de dominio en /etc/hosts
      lineinfile:
        path: /etc/hosts
        line: "127.0.1.1       ejemplo.zataca.com  ISPConfig"
        create: yes

    # Paso 7: Reiniciar el equipo para aplicar el nombre de dominio
    - name: Reiniciar el equipo para aplicar el nombre de dominio
      reboot:
        msg: "Reiniciando el equipo para aplicar el nombre de dominio."
        connect_timeout: 5
        reboot_timeout: 600
      ignore_errors: yes

    # Paso 8: Instalar UFW si no está presente
    - name: Instalar UFW si no está presente
      apt:
        name: ufw
        state: present

    # Paso 9: Verificar y crear el directorio /run/sshd si falta
    - name: Crear el directorio /run/sshd si no existe
      file:
        path: /run/sshd
        state: directory
        mode: '0755'

    # Paso 10: Asegurar que la directiva DebianBanner esté antes del bloque Match
    - name: Asegurar que DebianBanner no esté dentro del bloque Match
      lineinfile:
        path: /etc/ssh/sshd_config
        insertafter: '^# override default of no subsystems'
        line: 'DebianBanner no'
        state: present

    # Paso 11: Configurar SSH para permitir conexiones desde un rango específico
    - name: Configurar SSH para permitir conexiones desde la IP especificada
      blockinfile:
        path: /etc/ssh/sshd_config
        block: |
          Match Address 145.239.244.94,54.38.222.93,51.89.8.62,192.168.0.0/16
          PermitRootLogin yes
          PasswordAuthentication yes

    # Paso 12: Reiniciar el servicio SSH para aplicar cambios
    - name: Reiniciar el servicio SSH para aplicar cambios
      systemd:
        name: ssh
        state: restarted
        
    # Paso 13: Generar certificado SSL para Pure-FTPd en /tmp
    - name: Generar certificado SSL para Pure-FTPd en /tmp
      shell: |
        openssl req -x509 -nodes -days 7300 -newkey rsa:2048 \
        -subj '/C=DE/ST=None/L=None/O=IT/CN=prueba.myguest.virtualbox.org' \
        -keyout /tmp/pure-ftpd.pem -out /tmp/pure-ftpd.pem
      register: cert_creation_result
      ignore_errors: yes

    # Paso 14: Mover certificado Pure-FTPd a /etc/ssl/private/
    - name: Mover certificado Pure-FTPd a /etc/ssl/private/
      command: mv /tmp/pure-ftpd.pem /etc/ssl/private/pure-ftpd.pem
      when: cert_creation_result is succeeded

    # Paso 15: Ajustar permisos del certificado SSL en /etc/ssl/private/
    - name: Ajustar permisos del certificado Pure-FTPd en /etc/ssl/private/
      file:
        path: /etc/ssl/private/pure-ftpd.pem
        owner: root
        group: root
        mode: '0600'
      when: cert_creation_result is succeeded

    # Paso 16: Descargar e instalar ISPConfig con Nginx
    - name: Descargar e instalar ISPConfig con Nginx
      shell: |
        wget -O - https://get.ispconfig.org | sudo sh -s -- --use-nginx --use-ftp-ports=40110-40210 --unattended-upgrades --i-know-what-i-am-doing
      register: install_ispconfig_result

    # Paso 17: Verificar si la instalación de ISPConfig ha fallado
    - name: Verificar si la instalación de ISPConfig ha fallado
      debug:
        msg: "Instalación de ISPConfig completa."
      when: install_ispconfig_result is succeeded

    # Paso 18: Eliminar ficheros de instalación temporales de ISPConfig
    - name: Eliminar ficheros de instalación temporales de ISPConfig
      file:
        path: /tmp/ispconfig-ai/var/log/setup-*
        state: absent
      when: install_ispconfig_result is succeeded

    # Paso 19: Instalar paquetes para impresión de facturas en PDF
    - name: Instalar paquetes necesarios para imprimir facturas en PDF
      apt:
        name: "{{ item }}"
        state: present
      loop:
        - libnss3
        - libatk1.0-0
        - libatk-bridge2.0-0
        - libdrm2
        - libxkbcommon0
        - libxcomposite1
        - ca-certificates
        - fonts-liberation
        - libasound2
        - libcairo2
        - libcups2
        - libdbus-1-3
        - libexpat1
        - libfontconfig1
        - libgbm1
        - libglib2.0-0
        - libgtk-3-0
        - libnspr4
        - libpango-1.0-0
        - libpangocairo-1.0-0
        - libstdc++6
        - libx11-6
        - libxcb1
        - libxcursor1
        - libxdamage1
        - libxfixes3
        - libxrandr2
        - libxss1
        - libxtst6
        - lsb-release
        - wget
        - xdg-utils
        - php7.4-bcmath

    # Paso 20: Configurar firewall UFW con los puertos necesarios para ISPConfig
    - name: Configurar firewall usando UFW
      ufw:
        rule: allow
        port: "{{ item }}"
        proto: tcp
      loop:
        - "20"
        - "21"
        - "22"
        - "25"
        - "80"
        - "443"
        - "40110:40210"
        - "110"
        - "143"
        - "465"
        - "587"
        - "993"
        - "995"
        - "53"
        - "8080"
        - "8081"
      register: ufw_result

    - name: Verificar si la configuración del firewall fue exitosa
      debug:
        msg: "Configuración del firewall UFW completada."
      when: ufw_result is succeeded

    # Paso 21: Eliminar la página por defecto de Nginx
    - name: Eliminar la página por defecto de Nginx
      file:
        path: /var/www/html/index.nginx-debian.html
        state: absent

    # Paso 22: Instalar Yarn
    - name: Instalar Yarn
      shell: |
        curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo gpg --yes --dearmor -o /usr/share/keyrings/yarnkey.gpg
        echo "deb [signed-by=/usr/share/keyrings/yarnkey.gpg] https://dl.yarnpkg.com/debian stable main" | sudo tee /etc/apt/sources.list.d/yarn.list
        apt update -y
        apt install yarn -y


    # Paso 23: Instalar drivers de Postgres y bcmath para PHP
    - name: Instalar drivers de Postgres y bcmath para PHP
      apt:
        name: "{{ item }}"
        state: present
      loop:
        - php8.2-pgsql
        - php5.6-pgsql
        - php7.0-pgsql
        - php7.1-pgsql
        - php7.2-pgsql
        - php7.3-pgsql
        - php7.4-pgsql
        - php8.0-pgsql
        - php8.1-pgsql
        - php8.3-pgsql
        - php8.2-bcmath
        - php5.6-bcmath
        - php7.0-bcmath
        - php7.1-bcmath
        - php7.2-bcmath
        - php7.3-bcmath
        - php7.4-bcmath
        - php8.0-bcmath
        - php8.1-bcmath
        - php8.3-bcmath

    # Paso 24: Instalar supervisord
    - name: Instalar supervisord
      apt:
        name: supervisor
        state: present

    # Paso 25: Mostrar contraseñas de ISPConfig
    - name: Mostrar contraseñas de ISPConfig
      shell: |
        grep -E "(Your ISPConfig admin password is|Your MySQL root password is)" /tmp/ispconfig-ai/var/log/setup-*
      register: ispconfig_passwords_output
      failed_when: ispconfig_passwords_output.rc != 0
      changed_when: false

    - name: Mostrar contraseñas en el log de Ansible
      debug:
        var: ispconfig_passwords_output.stdout

  handlers:
    - name: Restart sshd
      systemd:
        name: ssh
        state: restarted

    - name: Restart nginx
      systemd:
        name: nginx
        state: restarted

    - name: Restart postfix
      systemd:
        name: postfix
        state: restarted

    - name: Restart dovecot
      systemd:
        name: dovecot
        state: restarted
